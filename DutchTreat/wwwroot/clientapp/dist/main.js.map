{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./ClientApp/app/app.component.ts","./ClientApp/app/app.component.html","./ClientApp/app/app.module.ts","./ClientApp/app/component/cart/cart.component.ts","./ClientApp/app/component/cart/cart.component.html","./ClientApp/app/component/checkout/checkout.component.ts","./ClientApp/app/component/checkout/checkout.component.html","./ClientApp/app/component/product/product.component.ts","./ClientApp/app/component/product/product.component.html","./ClientApp/app/component/shop/shop.component.ts","./ClientApp/app/component/shop/shop.component.html","./ClientApp/app/drums/create-report-card/create-report-card.component.ts","./ClientApp/app/drums/create-report-card/create-report-card.component.html","./ClientApp/app/drums/drums.component.ts","./ClientApp/app/drums/drums.component.html","./ClientApp/app/drums/drums.module.ts","./ClientApp/app/drums/models/layout-setting.model.ts","./ClientApp/app/drums/models/report-card.model.ts","./ClientApp/app/drums/services/report-card.service.ts","./ClientApp/app/drums/shared/form-submit-alert/form-submit-alert.component.ts","./ClientApp/app/drums/shared/form-submit-alert/form-submit-alert.component.html","./ClientApp/app/drums/shared/notification.service.ts","./ClientApp/app/login/login.component.ts","./ClientApp/app/login/login.component.html","./ClientApp/app/shared/dataService.ts","./ClientApp/app/shared/order.ts","./ClientApp/environments/environment.ts","./ClientApp/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'dutchtreat-shop',\n  templateUrl: \"./app.component.html\",\n  // template: `\n  //   <h3>\n  //     I angular Dutch Treate shop is working\n  //   </h3>\n  // `,\n  styles: []\n})\nexport class AppComponent {\n  title = 'dutch-treat-app';\n}\n","<div class=\"row mt-2\">\n    <div class=\"col-md-12\">\n        <ul class=\"nav nav-tabs\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Drums</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"shop\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Shop</a>\n            </li>\n        </ul>\n    </div>\n</div>\n<div class=\"row mt-4\">\n    <div class=\"col-md-12\">\n        <router-outlet></router-outlet>        \n    </div>\n</div>","// Modules\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {RouterModule} from \"@angular/router\";\nimport {FormsModule} from \"@angular/forms\";\nimport { DrumsModule } from './drums/drums.module';\n\n// Components - Dutch Treat\nimport {AppComponent} from './app.component';\nimport {ProductComponent} from \"./component/product/product.component\";\nimport {CartComponent} from \"./component/cart/cart.component\";\nimport {ShopComponent} from \"./component/shop/shop.component\";\nimport {CheckoutComponent} from \"./component/checkout/checkout.component\";\nimport {LoginComponent} from \"./login/login.component\";\n// Components - Drums\nimport {DrumsComponent} from \"./drums/drums.component\";\n\n// Services\nimport {DataService} from \"./shared/dataService\";\n\n\n\n\nlet routes = [\n    {path: \"shop\", component: ShopComponent},\n    {path: \"checkout\", component: CheckoutComponent},\n    {path: \"login\", component: LoginComponent},\n    {path: \"\", component: DrumsComponent}\n]\n\n@NgModule({\n  declarations: [\n      AppComponent,\n      ProductComponent,\n      CartComponent,\n      ShopComponent,\n      CheckoutComponent,\n      LoginComponent\n  ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        RouterModule.forRoot(routes, {\n            useHash: true,\n            enableTracing: false // for Debugging of the Routes\n        }),\n        FormsModule,\n        DrumsModule\n    ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component} from \"@angular/core\";\nimport {DataService} from \"../../shared/dataService\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n    selector: \"shopping-cart\",\n    templateUrl: \"cart.component.html\",\n    styleUrls: []\n})\nexport class CartComponent { \n    constructor(public dataService: DataService, private router: Router) {\n    }\n\n    onCheckOut() {\n        if(this.dataService.loginRequired()){\n            // Do Login\n            this.router.navigate([\"login\"]);\n        }else{\n            // Go to checkout\n            this.router.navigate([\"checkout\"]);\n        }\n    }\n}","<h3>Shopping Cart</h3>\n\n<div>#/Items: {{dataService.order.items.length}}</div>\n<div>Subtotal: {{dataService.order.subtotal | currency: \"USD\"}}</div>\n<table class=\"table table-bordered table-hover\">\n    <thead>\n        <tr>\n            <td>Product</td>\n            <td>#</td>\n            <td>$</td>\n            <td>Total</td>    \n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let item of dataService.order.items\">\n            <td>{{item.productCategory}} - {{item.productTitle}}</td>\n            <td>{{item.quantity}}</td>\n            <td>{{item.unitPrice | currency: \"USD\"}}</td>\n            <td>{{item.unitPrice * item.quantity | currency: \"USD\"}}</td>\n        </tr>\n    </tbody>\n</table>\n<button class=\"btn btn-success\" *ngIf=\"dataService.order.items.length > 0\" (click)=\"onCheckOut()\"> Checkout </button>","import { Component } from \"@angular/core\";\nimport {DataService} from \"../../shared/dataService\";\nimport {Router} from \"@angular/router\";\nimport {map} from \"rxjs/operators\";\n\n\n@Component({\n  selector: \"checkout\",\n  templateUrl: \"checkout.component.html\",\n  styleUrls: ['checkout.component.css']\n})\nexport class CheckoutComponent {\n  constructor(public dataService: DataService, private router:Router) {\n  }\n   errorMessage: string = \"\";\n\n  onCompletePurchase() {\n    debugger;\n    this.dataService.checkOut().subscribe(success => {\n        this.router.navigate([\"/\"]);\n    }, failure => {\n      debugger;\n      this.errorMessage = failure.error;\n    });\n  }\n}","<div class=\"row\">\n  <div *ngIf=\"errorMessage\" class=\"alert-warning\">{{errorMessage}}</div>\n  <h3>Confirm Order</h3>\n  <table class=\"table table-bordered table-hover\">\n    <tr *ngFor=\"let item of dataService.order.items\">\n      <td><img src=\"/img/{{ item.productArtId }}.jpg\" alt=\"o.productTitle\" class=\"img-thumbnail checkout-thumb\" /></td>\n      <td>{{ item.productCategory }}({{ item.productSize }}) - {{ item.productArtist }}: {{ item.productTitle }}</td>\n      <td>{{ item.quantity }}</td>\n      <td>{{ item.unitPrice|currency:'USD'}}</td>\n      <td>{{ (item.unitPrice * item.quantity)|currency:'USD' }}</td>\n    </tr>\n  </table>\n  <div class=\"col-md-4 col-md-offset-8 text-right\">\n    <table class=\"table table-borderless\">\n      <tr>\n        <td class=\"text-right\">Subtotal</td>\n        <td class=\"text-right\">{{ dataService.order.subtotal | currency:'USD' }}</td>\n      </tr>\n      <tr>\n        <td class=\"text-right\">Shipping</td>\n        <td class=\"text-right\">$ 0.00</td>\n      </tr>\n      <tr>\n        <td class=\"text-right\">Total:</td>\n        <td class=\"text-right\">{{ dataService.order.subtotal | currency:'USD'}}</td>\n      </tr>\n    </table>\n    <button class=\"btn btn-success\" (click)=\"onCompletePurchase()\">Complete Purchase</button>\n    <a routerLink=\"/\" class=\"btn btn-info\">Cancel</a>\n  </div>\n\n</div>","import {Component, OnInit} from \"@angular/core\"\nimport {DataService} from \"../../shared/dataService\";\nimport {Product} from \"../../shared/product\";\n\n@Component({\n    selector: \"product-list\",\n    templateUrl: \"product.component.html\",\n    styleUrls:[\"product.component.css\"]\n})\n\nexport class ProductComponent implements OnInit{\n    constructor(private dataService: DataService) {\n    }\n    \n    public products: Product[] = [];\n\n    ngOnInit(): void {\n        this.dataService.loadProducts()\n            .subscribe(success => {\n                if(success){\n                    this.products = this.dataService.products;\n                }\n            });\n    }\n\n    addProduct(product: Product) {\n        this.dataService.addToOrder(product);\n    }\n}","<div class=\"row\" >\n\n    <div class=\"product-info col-md-4\" *ngFor=\"let product of products\">\n        <div class=\"bg-light p-1 m-1\">\n            <img src=\"/img/{{product.artId}}.jpg\" class=\"img-fluid\" [alt]=\"product.title\"/>\n            <div class=\"product-name\">{{product.category}} - {{product.size}}</div>\n            <ul class=\"product-props list-unstyled\">\n                <li><strong>Price</strong>: {{product.price}}}</li>\n                <li><strong>Artist</strong>: {{product.artist}}</li>\n                <li><strong>Title</strong>: {{product.title}}</li>\n                <li><strong>Desctiption</strong>: {{product.artDescription}}</li>\n            </ul>\n            <button id=\"buy-button\" class=\"btn btn-success\" (click)=\"addProduct(product)\">Buy</button>\n        </div>\n    </div>\n    \n    \n\n<!--    <div class=\"col-md-9 card bg-dark\"></div>-->\n<!--    <div class=\"col-md-3 card bg-danger\"></div>-->\n<!--    <ul>-->\n<!--        <li *ngFor=\"let product of products\">{{product.title}}: {{product.price | currency:\"CAD\"}}</li>-->\n<!--    </ul>-->\n</div>","import {Component} from \"@angular/core\";\n\n@Component({\n    selector: \"shop-tab\",\n    templateUrl: \"shop.component.html\",\n    styleUrls:[]\n})\nexport class ShopComponent {\n    \n}","<div class=\"row\">\n    <div class=\"col-lg-9\">\n<!--        <h3>{{title}}</h3>-->\n        <product-list></product-list>\n    </div>\n    <div class=\"col-md-3\">\n        <div class=\"card bg-light p-2 text-center\">\n            <shopping-cart></shopping-cart>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {ReportCardModel} from \"../models/report-card.model\";\nimport {ReportCardService} from \"../services/report-card.service\";\nimport {NotificationService} from \"../shared/notification.service\";\n\n@Component({\n  selector: 'create-report-card',\n  templateUrl: 'create-report-card.component.html',\n  styleUrls: ['create-report-card.component.css']\n})\nexport class CreateReportCardComponent {\n    constructor(private reportCardService: ReportCardService,private notifyService : NotificationService) {\n    }\n    public reportCard:ReportCardModel = new ReportCardModel();\n    public showMask:boolean;\n    public submitMessage:string;\n    public errorMessage: string;\n    public successMessage: string;\n    \n    createReportCard(reportCard: ReportCardModel){\n        this.showMask = true;\n        this.submitMessage = \"Creating Report Card...\"\n        this.reportCardService.createReportCard(reportCard).subscribe(success => {\n            this.showMask = false;\n            this.notifyService.showSuccess(\"\", \"Report card is created successfully!\");\n        }, failure => {\n            this.showMask = false;\n            debugger;\n            this.notifyService.showError(\"\", \"\"+failure.error.errors.toString());\n        });\n    }\n}\n","<div class=\"container-fluid\">\n    <div class=\"navbar bg-light\">\n        <div class=\"nav-item\">\n            <b>Create Report Card</b>\n        </div>\n    </div>\n   <div class=\"row\">\n       <div class=\"col-md-12\"><app-form-submit-alert [showProgress]=\"showMask\" [progressMessage]=\"submitMessage\"></app-form-submit-alert></div>\n       <div class=\"col-md-12\">\n           <form #createReportCardForm=\"ngForm\" novalidate>\n<!--               <div  *ngIf=\"errorMessage\" class=\"alert alert-danger alert-dismissible\" data-auto-dismiss role=\"alert\">-->\n<!--                   <button class=\"close\" aria-label=\"close\" data-dismiss=\"alert\">&times;</button>-->\n<!--                   <span id=\"alertMsgError\">{{errorMessage}}</span>-->\n<!--               </div>-->\n<!--               <div  *ngIf=\"successMessage\" class=\"alert alert-success alert-dismissible\" data-auto-dismiss role=\"alert\">-->\n<!--                   <button class=\"close\" aria-label=\"close\" data-dismiss=\"alert\">&times;</button>-->\n<!--                   <span id=\"alertMsgSuccess\">{{successMessage}}</span>-->\n<!--               </div>-->\n               <div class=\"form-row\">\n                   <div class=\"form-group col-md-4\">\n                       <label for=\"schoolYear\">Select School Year</label>\n                       <select id=\"schoolYear\" name=\"schoolYear\" class=\"form-control\" [(ngModel)]=\"reportCard.schoolYear\" #schoolYear=\"ngModel\" [ngClass]=\"{ 'is-invalid':schoolYear.touched && schoolYear.invalid }\" >\n                           <option>2018-2019</option>\n                           <option>2019-2020</option>\n                       </select>\n                       <div class=\"invalid-feedback\" *ngIf=\"schoolYear.touched && schoolYear.invalid && schoolYear.errors.required\">School Year is required.</div>\n                   </div>\n                   <div class=\"form-group col-md-4\">\n                       <label for=\"category\">Select Category</label>\n                       <select id=\"category\" name=\"category\" class=\"form-control\" [(ngModel)]=\"reportCard.category\" #category=\"ngModel\" [ngClass]=\"{ 'is-invalid':category.touched && category.invalid }\"  required>\n                           <option>Full Year</option>\n                           <option>1st Semester</option>\n                       </select>\n                       <div class=\"invalid-feedback\" *ngIf=\"category.touched && category.invalid && category.errors.required\">Category is required.</div>\n                   </div>\n                   <div class=\"form-group col-md-4\">\n                       <label for=\"period\">Select Report Period</label>\n                       <select id=\"period\" name=\"period\" class=\"form-control\" [(ngModel)]=\"reportCard.period\" #period=\"ngModel\"  [ngClass]=\"{ 'is-invalid':period.touched && period.invalid }\"  required>\n                           <option>Final</option>\n                           <option>1st Year</option>\n                       </select>\n                       <div class=\"invalid-feedback\" *ngIf=\"period.touched && period.invalid && period.errors.required\">Period is required.</div>\n                   </div>\n               </div>\n               <div class=\"form-row\">\n                   <div class=\"form-group col-md-4\">\n                       <label for=\"grade\">Select Grade</label>\n                       <select id=\"grade\" name=\"grade\" class=\"form-control\" [(ngModel)]=\"reportCard.grade\" #grade=\"ngModel\" [ngClass]=\"{ 'is-invalid':grade.touched && grade.invalid }\"  required>\n                           <option>Grade 12</option>\n                           <option>Grade 11</option>\n                       </select>\n                       <div class=\"invalid-feedback\" *ngIf=\"grade.touched && grade.invalid && grade.errors.required\">Grade is required.</div>\n                   </div>\n                   <div class=\"form-group col-md-4\">\n                       <label for=\"studentFullName\">Select Student</label>\n                       <select id=\"studentFullName\" name=\"studentFullName\" class=\"form-control\" [(ngModel)]=\"reportCard.studentFullName\" #studentFullName=\"ngModel\" [ngClass]=\"{ 'is-invalid':studentFullName.touched && studentFullName.invalid }\"  required>\n                           <option >Bruce Wane</option>\n                           <option>Jane Smith</option>\n                       </select>\n                       <div class=\"invalid-feedback\" *ngIf=\"studentFullName.touched && studentFullName.invalid && studentFullName.errors.required\">Student name is required.</div>\n                   </div>\n                   <div class=\"form-group col-md-4\">\n                       <label for=\"reportType\">Report Card Type</label>\n                       <select id=\"reportType\" name=\"reportType\" class=\"form-control\" [(ngModel)]=\"reportCard.reportType\" #reportType=\"ngModel\" [ngClass]=\"{ 'is-invalid':reportType.touched && reportType.invalid }\"  required>\n                           <option>Detailed Report</option>\n                           <option>Semester Report</option>\n                       </select>\n                       <div class=\"invalid-feedback\" *ngIf=\"reportType.touched && reportType.invalid && reportType.errors.required\">Report card type is required.</div>\n                   </div>\n               </div>\n               <div class=\"form-group\">\n                   <div class=\"row\">\n                       <div class=\"col-md-4\">\n                           <label for=\"layoutSettings\">Layout Settings</label>\n                           <div id=\"layoutSettings\">\n                               <div class=\"form-check\" *ngFor=\"let layoutSetting of reportCard.layoutSettings; index as i\">\n                                   <label>\n                                       <input class=\"form-check-input\"  type=\"checkbox\" [(ngModel)]=\"layoutSetting.value\" name=\"layoutSettingCheckBox+{{i}}\">{{layoutSetting.name}}\n                                   </label>\n                               </div>\n<!--                               <div class=\"form-check\">-->\n<!--                                   <label>-->\n<!--                                       <input class=\"form-check-input\" name=\"showHeaderOnAllPages\" type=\"checkbox\" [(ngModel)]=\"reportCard.layoutSettings.showHeaderOnAllPages\">Show Headers on All Pages-->\n<!--                                   </label>-->\n<!--                               </div>-->\n<!--                               <div class=\"form-check\">-->\n<!--                                   <label>-->\n<!--                                       <input class=\"form-check-input\" name=\"showMinistryOfEducationLogo\" type=\"checkbox\" [(ngModel)]=\"reportCard.layoutSettings.showMinistryOfEducationLogo\" >Show Ministry of Education Logo-->\n<!--                                   </label>-->\n<!--                               </div>-->\n<!--                               <div class=\"form-check\">-->\n<!--                                   <label>-->\n<!--                                       <input class=\"form-check-input\" name=\"showPageNumber\" type=\"checkbox\" [(ngModel)]=\"reportCard.layoutSettings.showPageNumber\">Show Page Number-->\n<!--                                   </label>-->\n<!--                               </div>-->\n<!--                               <div class=\"form-check\">-->\n<!--                                   <label>-->\n<!--                                       <input class=\"form-check-input\" name=\"showPrintDate\" type=\"checkbox\" [(ngModel)]=\"reportCard.layoutSettings.showPrintDate\">Show Print Date-->\n<!--                                   </label>-->\n<!--                               </div>-->\n                           </div>\n                       </div>\n                       <div class=\"col-md-4\">\n                           <label for=\"reportCardContent\">Report Card Content</label>\n                           <div id=\"reportCardContent\">\n                               <div class=\"form-check\" *ngFor=\"let reportCardContentSetting of reportCard.reportCardContentSettings; index as i\">\n                                   <label>\n                                       <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"reportCardContentSetting.value\" name=\"reportCardContentSettingCheckBox+{{i}}\">{{reportCardContentSetting.name}}\n                                   </label>\n                               </div>\n<!--                               <div class=\"form-check\">-->\n<!--                                   <label>-->\n<!--                                       <input class=\"form-check-input\" name=\"showSnapshotOfLearning\" type=\"checkbox\" [(ngModel)]=\"reportCard.reportCardContentSettings.showSnapshotOfLearning\">Show Snapshot of Learning-->\n<!--                                   </label>-->\n<!--                               </div>-->\n<!--                               <div class=\"form-check\">-->\n<!--                                   <label>-->\n<!--                                       <input class=\"form-check-input\" name=\"excludeTermEvaluation\" type=\"checkbox\" [(ngModel)]=\"reportCard.reportCardContentSettings.excludeTermEvaluation\">Exclude Term Evaluations-->\n<!--                                   </label>-->\n<!--                               </div>-->\n<!--                               <div class=\"form-check\">-->\n<!--                                   <label>-->\n<!--                                       <input class=\"form-check-input\" name=\"hideStudentSummaryPage\" type=\"checkbox\" [(ngModel)]=\"reportCard.reportCardContentSettings.hideStudentSummaryPage\">Hide Student Summary Page-->\n<!--                                   </label>-->\n<!--                               </div>-->\n<!--                               <div class=\"form-check\">-->\n<!--                                   <label>-->\n<!--                                       <input class=\"form-check-input\" name=\"hideSMARTGoals\" type=\"checkbox\" [(ngModel)]=\"reportCard.reportCardContentSettings.hideSMARTGoals\">Hide SMART Goals-->\n<!--                                   </label>-->\n<!--                               </div>-->\n                           </div>\n                       </div>\n                   </div>\n               </div>\n               <div class=\"form-group\">\n                   <div class=\"row\">\n                       <div class=\"col-md-4\">\n                           <label for=\"gradeSpecificSettings\">Grade Specific Settings</label>\n                           <div id=\"gradeSpecificSettings\">\n                               <div class=\"form-check\" *ngFor=\"let gradeSpecificSetting of reportCard.gradeSpecificSettings; index as i\">\n                                   <label>\n                                       <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"gradeSpecificSetting.value\" name=\"gradeSpecificSettingCheckBox+{{i}}\">{{gradeSpecificSetting.name}}\n                                   </label>\n                               </div>\n<!--                               <div class=\"form-check\">-->\n<!--                                   <label>-->\n<!--                                       <input class=\"form-check-input\" name=\"showGraduationRequirements\" type=\"checkbox\" [(ngModel)]=\"reportCard.gradeSpecificSettings.showGraduationRequirements\">Show Graduation Requirements-->\n<!--                                   </label>-->\n<!--                               </div>-->\n                           </div>\n                       </div>\n                   </div>\n               </div>\n<!--               <button class=\"btn btn-primary\">Preview Report Card</button>-->\n               <button (click)=\"createReportCard(reportCard)\" class=\"btn btn-primary\" [disabled]=\"createReportCardForm.form.invalid\">Create Report Card</button>\n           </form>\n       </div>\n   </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-drums',\n  templateUrl: \"drums.component.html\",\n  styles: [\n  ]\n})\nexport class DrumsComponent {\n}\n","<div class=\"row\">\n    <div class=\"col-lg-12\">\n<!--        <h3>D.R.U.M.S Home</h3>-->\n        <create-report-card></create-report-card>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CreateReportCardComponent } from './create-report-card/create-report-card.component';\nimport { DrumsComponent } from './drums.component';\nimport {FormsModule} from \"@angular/forms\";\nimport {ReportCardService} from \"./services/report-card.service\";\nimport {FormSubmitAlertComponent} from \"./shared/form-submit-alert/form-submit-alert.component\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {ToastrModule} from \"ngx-toastr\";\nimport {NotificationService} from \"./shared/notification.service\";\n\n\n@NgModule({\n  declarations: [CreateReportCardComponent, DrumsComponent, FormSubmitAlertComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        BrowserAnimationsModule,\n        ToastrModule.forRoot()\n    ],\n    exports:[], \n    providers:[ReportCardService, NotificationService]\n})\nexport class DrumsModule { }\n","export class LayoutSettingModel {\n    id:number;\n\n    constructor(\n        public name: string = \"\",\n        public value: boolean = false) {\n    }\n}","import {LayoutSettingModel} from \"./layout-setting.model\";\nimport {ReportCardContentSettingModel} from \"./report-card-content-setting.model\";\nimport {GradeSpecificSettingModel} from \"./grade-specific-setting.model\";\n\nexport class ReportCardModel {\n    id: number;\n    \n    constructor(\n        public schoolYear: string= \"\",\n        public category: string= \"\",\n        public period: string= \"\",\n        public grade: string= \"\",\n        public studentFullName: string= \"\",\n        public reportType: string= \"\",\n        public layoutSettings: LayoutSettingModel[] =  [new LayoutSettingModel(\"test\",true), new LayoutSettingModel(\"test2\",false)],\n        public reportCardContentSettings: ReportCardContentSettingModel[] =  [new LayoutSettingModel(\"test3\",false), new LayoutSettingModel(\"test4\",true)],\n        public gradeSpecificSettings: GradeSpecificSettingModel[] =  [new LayoutSettingModel(\"test5\",false)]) {\n    }\n}","import {Injectable} from \"@angular/core\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {map} from \"rxjs/operators\";\nimport {Order} from \"../../shared/order\";\nimport {ReportCardModel} from \"../models/report-card.model\";\n\n@Injectable()\nexport class ReportCardService {\n    constructor(private http:HttpClient) {\n    }\n\n    public createReportCard(reportCard: ReportCardModel){\n        return this.http.post(\"/api/reportCards\", reportCard);\n    }\n}","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-form-submit-alert',\n  templateUrl: \"form-submit-alert.component.html\",\n  styleUrls: [\"form-submit-alert.component.css\"]\n})\nexport class FormSubmitAlertComponent implements OnInit {\n  @Input() showProgress: boolean = false;\n  @Input() progressMessage: string = \"Loading...\"\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"loadWrapper\" *ngIf=\"showProgress\">\n    <div class=\"loader\"></div>\n    <div class=\"row\">\n        <div class=\"col-md-12 loaderMessage\">\n            {{progressMessage}}\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport {ToastrService} from \"ngx-toastr\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(private toastr: ToastrService) {}\n\n  showSuccess(message, title){\n    this.toastr.success(message, title, this.toasterOptions())\n  }\n\n  showError(message, title){\n    this.toastr.error(message, title, this.toasterOptions())\n  }\n\n  showInfo(message, title){\n    this.toastr.info(message, title, this.toasterOptions())\n  }\n\n  showWarning(message, title){\n    this.toastr.warning(message, title, this.toasterOptions())\n  }\n  \n  toasterOptions():{}{\n    return {\n      \"closeButton\": true,\n      \"debug\": false,\n      \"newestOnTop\": false,\n      \"progressBar\": false,\n      \"positionClass\": \"toast-bottom-full-width\",\n      \"preventDuplicates\": false,\n      \"onclick\": null,\n      \"showDuration\": \"300\",\n      \"hideDuration\": \"1000\",\n      \"timeOut\": \"5000\",\n      \"extendedTimeOut\": \"1000\",\n      \"showEasing\": \"swing\",\n      \"hideEasing\": \"linear\",\n      \"showMethod\": \"fadeIn\",\n      \"hideMethod\": \"fadeOut\"\n    }\n  }\n}\n","import {Component} from \"@angular/core\";\nimport {DataService} from \"../shared/dataService\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n    selector: \"login\",\n    templateUrl: \"login.component.html\",\n    styleUrls: []\n})\nexport class LoginComponent {\n    constructor(private dataService: DataService, private router: Router) {\n    }\n    public creds = {\n        username: \"\",\n        password: \"\"\n    };\n    errorMessage: string = \"\";\n    onLogin(){\n        // Call the login service\n        this.dataService.login(this.creds).subscribe(success => {\n                if(this.dataService.order.items.length == 0){\n                    this.router.navigate([\"\"]);\n                }else{\n                    this.router.navigate([\"checkout\"]);\n                }\n            \n        }, failure => {\n            this.errorMessage = failure.error;\n        });\n    }\n}","<div class=\"row\">\n    <div class=\"col-md-4 col-md-offset-4\">\n        <div *ngIf=\"errorMessage\" class=\"alert-warning\">{{errorMessage}}</div>\n        <form (ngSubmit)=\"onLogin()\" #loginForm=\"ngForm\" novalidate>\n            <div class=\"form-group\">\n                <label for=\"username\">Username</label>\n                <input type=\"text\" class=\"form-control\" id=\"username\" name=\"username\" [(ngModel)]=\"creds.username\" #username=\"ngModel\" required/>\n                <div class=\"text-danger\" *ngIf=\"username.touched && username.invalid && username.errors\">Username is Required!</div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" [(ngModel)]=\"creds.password\" #password=\"ngModel\" required/>\n                <div class=\"text-danger\" *ngIf=\"password.touched && password.invalid && password.errors\">Password is Required!</div>\n            </div>\n            <div class=\"form-group\">\n                <input type=\"submit\" class=\"btn btn-success\" value=\"Login\" [disabled]=\"loginForm.invalid\"/>\n                <a href=\"#\" class=\"btn btn-default\" >Cancel</a>\n            </div>\n        </form>\n    </div>\n</div>","import {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {map} from \"rxjs/operators\";\nimport {Observable} from \"rxjs\";\nimport {Product} from \"./product\";\nimport {Order, OrderItem} from \"./order\";\n\n@Injectable()\nexport class DataService {\n    constructor(private http:HttpClient) {\n    }\n    \n    private token: string = \"\";\n    private tokenExpirationTime: Date;\n    \n    public order: Order = new Order();\n    public products: Product[]  = [];\n    \n    loadProducts(): Observable<boolean>{\n       return this.http.get(\"/api/products\")\n           .pipe(\n               map((data: any[]) => \n               {\n                   this.products = data; \n                   return true;\n               }\n           )\n        );\n    }\n    \n    public loginRequired(): boolean{\n        return this.token.length == 0 || this.tokenExpirationTime > new Date();\n    }\n    \n    public login(creds){\n       return this.http.post(\"/account/createtoken\", creds).pipe(map((data: any) => {\n            this.token = data.token;\n            this.tokenExpirationTime = data.tokenExpirationTime;\n        }));\n    }\n    \n    public checkOut(){\n        if(!this.order.orderNumber){\n            this.order.orderNumber = Date.now().toString();\n        }\n        return this.http.post(\"/api/orders\", this.order, {\n            headers: new HttpHeaders().set(\"Authorization\", \"Bearer \" + this.token)\n        })\n            .pipe(map(response => {\n            this.order = new Order();\n        }));\n    }\n    public addToOrder(product: Product){\n      \n        var orderItem: OrderItem = this.order.items.find(item => item.productId == product.id);\n        \n        if(orderItem){\n         orderItem.quantity++;   \n        }else {\n            orderItem = new OrderItem();\n            orderItem.productId = product.id;\n            orderItem.productArtist = product.artist;\n            orderItem.productArtId = product.artId;\n            orderItem.productCategory = product.category;\n            orderItem.productSize = product.size;\n            orderItem.productTitle = product.title;\n            orderItem.unitPrice = product.price;\n            orderItem.quantity = 1;\n            \n            this.order.items.push(orderItem);\n        }\n    }\n}","import * as _ from \"lodash\";\nexport class Order {\n    orderId: number;\n    orderDate: Date = new Date();\n    orderNumber: string;\n    items: Array<OrderItem> = new Array<OrderItem>();\n    \n    get subtotal(): number{\n        return _.sum(_.map(this.items, i=> i.unitPrice * i.quantity));    \n    };\n}\nexport class OrderItem {\n    id: number;\n    quantity: number;\n    unitPrice: number;\n    productId: number;\n    productCategory: string;\n    productSize: string;\n    productPrice: number;\n    productTitle: string;\n    productArtDescription: string;\n    productArtId: string;\n    productArtist: string;\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}